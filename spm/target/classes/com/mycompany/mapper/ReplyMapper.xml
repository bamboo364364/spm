<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.mycompany.mapper.ReplyMapper">
	
	
	<!-- 리플페이징 -->
	<select id="replyList" resultType="com.mycompany.model.ReplyDTO">
	select* from(
	 select rownum rn, a.* from(select replyId, goodId, memberMail, regDate, replyContent, rating, relevel 
	 from spm_reply
	 where goodId= #{goodId} order by replyId desc)a where rownum
	 <![CDATA[ <= ]]>  #{pageNum}*#{amount} ) where rn  <![CDATA[ >  ]]>
	 (#{pageNum}-1)*#{amount}  
	</select>
	
	<!-- 리플등록 -->
	<insert id="replyEnroll">
	insert into spm_reply(replyId, goodId,
	memberMail, regDate, replyContent, rating, relevel, seq)
	values(spm_reply_seq.nextval, #{goodId}, #{memberMail}, sysdate, #{replyContent},
	#{rating}, #{relevel}, spm_reply_seq.currval)
	</insert>
	
	
	<!-- 리플수정 -->
	<update id="replyModify">
	update spm_reply set
    replyContent= #{replyContent},
    <if test='rating != null'> rating= #{rating} </if>
     where replyId= #{replyId}
	</update>
	
	<!-- 리리플수정 -->
	<update id="rReplyModify">
	update spm_reply set
    replyContent= #{replyContent}
     where replyId= #{replyId}
	</update>
	
	<!-- 리플삭제 -->
	<delete id="replyDelete">
	delete spm_reply where replyId <![CDATA[ <= ]]> #{replyId}
	and replyId <![CDATA[ > ]]> #{ntReplyId}
	</delete>
	
	<!-- 리리플등록 -->
	<insert id="rReplyEnroll">
	insert into spm_reply(replyId, goodId, memberMail, regDate, replyContent,
	relevel, seq)
	values(#{replyId}, #{goodId}, #{memberMail}, sysdate, #{replyContent}, #{relevel},
	spm_reply_seq.nextval)
	</insert>
	
	<!-- 리리플뒤에있는 replyId 밀어주기 -->
	<update id="pushReplyId">
	update spm_reply set
    replyId= replyId+ 1 where replyId>= #{replyId}
	</update>
	

	<!-- 리플수(페이지계산) -->
	<select id="replyGetTotal" resultType="int">
	select count(*) from spm_reply where goodId= #{goodId}
	
	</select>
	
	
		<!-- 리플수(평점계산) -->
	<select id="rootReplyGetTotal" resultType="int">
	select count(*) from spm_reply where goodId= #{goodId}
	 and relevel <![CDATA[ < ]]> 1 
	</select>
	
	<!-- 평점계산 get-->
	<select id="ratingAvgGet" resultType="double">
	select ratingAvg from spm_good where goodId= #{goodId}
	</select>
	
	
	<!-- 평점계산 update-->
	<update id='ratingAvgUpdate'>
	update spm_good set ratingAvg= #{ratingAvg} where goodId= #{goodId}
	</update>
	
	<!-- 리플조회 1개 -->
	<select id="replySearch" resultType="com.mycompany.model.ReplyDTO">
	select replyId, goodId, memberMail, regDate, replyContent, rating, relevel 
	 from spm_reply

	 where replyId= #{replyId} 
	 </select>
	
	
	<!-- 리플조회 여러개 -->
	<select id="replySearches" resultType="com.mycompany.model.ReplyDTO">
	select replyId, goodId, memberMail, regDate, replyContent, rating, relevel 
	 from spm_reply
	 
	 where replyId <![CDATA[ <= ]]> #{replyId} and replyId <![CDATA[ > ]]> #{ntReplyId}
	 
	</select>
	
	
	
	
	
	
	
	
	
	
	
	

  </mapper>